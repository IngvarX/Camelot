<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutCamelotTitle" xml:space="preserve">
    <value>О Camelot</value>
  </data>
  <data name="AboutHeader" xml:space="preserve">
    <value>_Информация</value>
  </data>
  <data name="AboutPage" xml:space="preserve">
    <value>Camelot - это легковесный файловый менеджер, написанный на языке C#</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Применить</value>
  </data>
  <data name="ApplyActionToTheAllFilesAndFolders" xml:space="preserve">
    <value>Применить это действие для всех файлов и каталогов</value>
  </data>
  <data name="ArgumentsWithColon" xml:space="preserve">
    <value>Аргументы:</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Закрыть</value>
  </data>
  <data name="CloseAllButThis" xml:space="preserve">
    <value>Закрыть остальные вкладки</value>
  </data>
  <data name="CloseTab" xml:space="preserve">
    <value>Закрыть вкладку</value>
  </data>
  <data name="CloseTabsToTheLeft" xml:space="preserve">
    <value>Закрыть все вкладки слева</value>
  </data>
  <data name="CloseTabsToTheRight" xml:space="preserve">
    <value>Закрыть все вкладки справа</value>
  </data>
  <data name="CommandWithColon" xml:space="preserve">
    <value>Команда:</value>
  </data>
  <data name="ConfigurationHeader" xml:space="preserve">
    <value>_Конфигурация</value>
  </data>
  <data name="CopiedFileFromTo" xml:space="preserve">
    <value>Скопирован {0} в {1}</value>
  </data>
  <data name="CopiedFilesFromAndDirectoriesTo" xml:space="preserve">
    <value>Скопированы {0} файлы и {1} каталоги в {2}</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Копировать</value>
  </data>
  <data name="CopyingFileFromTo" xml:space="preserve">
    <value>Копирование {0} в {1}</value>
  </data>
  <data name="CopyingFilesFromAndDirectoriesTo" xml:space="preserve">
    <value>Копирование {0} файлов и {1} каталогов в {2}</value>
  </data>
  <data name="CopyToClipboard" xml:space="preserve">
    <value>Копировать в буфер обмена</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Создать</value>
  </data>
  <data name="CreateDirectoryTitle" xml:space="preserve">
    <value>Создать новый каталог</value>
  </data>
  <data name="CreationDateWithColon" xml:space="preserve">
    <value>Дата создания:</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="DeletedFileFromTo" xml:space="preserve">
    <value>Удалён {0} из {1}</value>
  </data>
  <data name="DeletedFilesAndDirectories" xml:space="preserve">
    <value>Удалены {0} файлы и {1} каталоги из {2}</value>
  </data>
  <data name="Directory" xml:space="preserve">
    <value>Каталог</value>
  </data>
  <data name="DirectoryInformationTitle" xml:space="preserve">
    <value>Информация о каталоге</value>
  </data>
  <data name="EnterDirectoryNameWithColon" xml:space="preserve">
    <value>Введите название каталога:</value>
  </data>
  <data name="ExitHeader" xml:space="preserve">
    <value>_Выйти</value>
  </data>
  <data name="Extension" xml:space="preserve">
    <value>Расширение</value>
  </data>
  <data name="FailedCopyFileFromTo" xml:space="preserve">
    <value>Не удалось скопировать {0} в {1}</value>
  </data>
  <data name="FailedCopyFromFilesAndDirectoriesTo" xml:space="preserve">
    <value>Не удалось скопировать {0} файлы и {1} каталоги в {2}</value>
  </data>
  <data name="FailedToDeleteFileFromTo" xml:space="preserve">
    <value>Не удалось удалить {0} из {1}</value>
  </data>
  <data name="FailedToDeleteFilesAndDirectoriesFrom" xml:space="preserve">
    <value>Не удалось удалить {0} файлы и {1} каталоги из {2}</value>
  </data>
  <data name="FailedToMoveFileFromTo" xml:space="preserve">
    <value>Не удалось переместить {0} в {1}</value>
  </data>
  <data name="FailedToMoveFilesAndDirectoriesTo" xml:space="preserve">
    <value>Не удалось переместить {0} файлы и {1} каталоги в {2}</value>
  </data>
  <data name="FileHeader" xml:space="preserve">
    <value>_Файл</value>
  </data>
  <data name="FileInformationTitle" xml:space="preserve">
    <value>Информация о файле</value>
  </data>
  <data name="FilesRemovingConfirmationTitle" xml:space="preserve">
    <value>Подтверждение удаления файлов</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>Общий</value>
  </data>
  <data name="HelpHeader" xml:space="preserve">
    <value>_Помощь</value>
  </data>
  <data name="LastAccessWithColon" xml:space="preserve">
    <value>Последний доступ:</value>
  </data>
  <data name="LastModificationWithColon" xml:space="preserve">
    <value>Последняя модификация:</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Последнее изменение</value>
  </data>
  <data name="Maintainers" xml:space="preserve">
    <value>Разработчики</value>
  </data>
  <data name="Move" xml:space="preserve">
    <value>Переместить</value>
  </data>
  <data name="MovedFileFromTo" xml:space="preserve">
    <value>Переместить {0} в {1}</value>
  </data>
  <data name="MovedFilesFromAndDirectoriesTo" xml:space="preserve">
    <value>Перемещены {0} файлы и {1} каталоги в {2}</value>
  </data>
  <data name="MovingFileFromTo" xml:space="preserve">
    <value>Перемещение {0} в {1}</value>
  </data>
  <data name="MovingFromFilesAndDirectoriesTo" xml:space="preserve">
    <value>Перемещение {0} файлов и {1} каталогов в {2}</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="NewDirectory" xml:space="preserve">
    <value>Новый каталог</value>
  </data>
  <data name="NewTab" xml:space="preserve">
    <value>Новая вкладка</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Открыть</value>
  </data>
  <data name="OriginalFile" xml:space="preserve">
    <value>Исходный файл</value>
  </data>
  <data name="OverwriteOptionsTitle" xml:space="preserve">
    <value>Перезаписать опции</value>
  </data>
  <data name="PathWithColon" xml:space="preserve">
    <value>Путь:</value>
  </data>
  <data name="PermanentlyRemoveFiles" xml:space="preserve">
    <value>Вы хотите навсегда удалить эти {0} файлов?</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="RemovingFileFromTo" xml:space="preserve">
    <value>Удаление {0} из {1}</value>
  </data>
  <data name="RemovingFilesAndDirectoriesFrom" xml:space="preserve">
    <value>Удаление {0} файлов и {1} каталогов из {2}</value>
  </data>
  <data name="RemovingFilesToTrash" xml:space="preserve">
    <value>Вы хотите переместить в корзину {0} файлов?</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Переименовать</value>
  </data>
  <data name="Replace" xml:space="preserve">
    <value>Перезаписать</value>
  </data>
  <data name="ReplaceFile" xml:space="preserve">
    <value>Перезаписать файл</value>
  </data>
  <data name="ReplaceFileDestinationDirectory" xml:space="preserve">
    <value>Файл с таким именем уже существует в "{0}". Вы хотите заменить его?</value>
  </data>
  <data name="ReplaceIfOlder" xml:space="preserve">
    <value>Заменить на новый</value>
  </data>
  <data name="ReplaceWith" xml:space="preserve">
    <value>Заменить на</value>
  </data>
  <data name="SelectFromFilesAndDirectories" xml:space="preserve">
    <value>{0} файлы ({1}) и {2} каталоги</value>
  </data>
  <data name="SelectNewNameForDestination" xml:space="preserve">
    <value>Выберите новое имя</value>
  </data>
  <data name="SettingsHeader" xml:space="preserve">
    <value>_Настройки</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="ShowProperties" xml:space="preserve">
    <value>Показать свойства</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Размер</value>
  </data>
  <data name="SizeWithColon" xml:space="preserve">
    <value>Размер:</value>
  </data>
  <data name="Skip" xml:space="preserve">
    <value>Пропустить</value>
  </data>
  <data name="Terminal" xml:space="preserve">
    <value>Терминал</value>
  </data>
</root>